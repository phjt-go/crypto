package aes

import (
	"testing"
)

func TestAesDecrypt(t *testing.T) {
	password := "111"
	str := "武小永"

	rows, err := AesEncrypt([]byte(str), []byte(password))
	if err != nil {
		t.Fatal("加密失败：", err)
	}
	t.Log(rows)

	bytes, err := AesDecrypt(rows, []byte("111"))
	if err != nil {
		t.Fatal(err)
	}
	t.Log(string(bytes))

}

func TestPKCS5Padding(t *testing.T) {

	test := "111"
	t.Log(len(test))
	a := make([]byte, 16)
	copy(a, []byte(test))
	t.Log(a)
	t.Log(len(a))
}

func BenchmarkAesEncrypt(b *testing.B) {
	for i := 0; i < b.N; i++ {
		AesEncrypt([]byte("04f4ad7ce3e68dce929d066f8d37bdf6d55e4a5a520ddbccf8a206c75444d135c7bcd525e736492966500184101b77feb00f59589ddda085e7439364b286c39f2304f4ad7ce3e68dce929d066f8d37bdf6d55e4a5a520ddbccf8a206c75444d135c7bcd525e736492966500184101b77feb00f59589ddda085e7439364b286c39f2304f4ad7ce3e68dce929d066f8d37bdf6d55e4a5a520ddbccf8a206c75444d135c7bcd525e736492966500184101b77feb00f59589ddda085e7439364b286c39f2304f4ad7ce3e68dce929d066f8d37bdf6d55e4a5a520ddbccf8a206c75444d135c7bcd525e736492966500184101b77feb00f59589ddda085e7439364b286c39f2304f4ad7ce3e68dce929d066f8d37bdf6d55e4a5a520ddbccf8a206c75444d135c7bcd525e736492966500184101b77feb00f59589ddda085e7439364b286c39f2304f4ad7ce3e68dce929d066f8d37bdf6d55e4a5a520ddbccf8a206c75444d135c7bcd525e736492966500184101b77feb00f59589ddda085e7439364b286c39f2304f4ad7ce3e68dce929d066f8d37bdf6d55e4a5a520ddbccf8a206c75444d135c7bcd525e736492966500184101b77feb00f59589ddda085e7439364b286c39f2304f4ad7ce3e68dce929d066f8d37bdf6d55e4a5a520ddbccf8a206c75444d135c7bcd525e736492966500184101b77feb00f59589ddda085e7439364b286c39f2304f4ad7ce3e68dce929d066f8d37bdf6d55e4a5a520ddbccf8a206c75444d135c7bcd525e736492966500184101b77feb00f59589ddda085e7439364b286c39f2304f4ad7ce3e68dce929d066f8d37bdf6d55e4a5a520ddbccf8a206c75444d135c7bcd525e736492966500184101b77feb00f59589ddda085e7439364b286c39f2304f4ad7ce3e68dce929d066f8d37bdf6d55e4a5a520ddbccf8a206c75444d135c7bcd525e736492966500184101b77feb00f59589ddda085e7439364b286c39f2304f4ad7ce3e68dce929d066f8d37bdf6d55e4a5a520ddbccf8a206c75444d135c7bcd525e736492966500184101b77feb00f59589ddda085e7439364b286c39f2304f4ad7ce3e68dce929d066f8d37bdf6d55e4a5a520ddbccf8a206c75444d135c7bcd525e736492966500184101b77feb00f59589ddda085e7439364b286c39f2304f4ad7ce3e68dce929d066f8d37bdf6d55e4a5a520ddbccf8a206c75444d135c7bcd525e736492966500184101b77feb00f59589ddda085e7439364b286c39f2304f4ad7ce3e68dce929d066f8d37bdf6d55e4a5a520ddbccf8a206c75444d135c7bcd525e736492966500184101b77feb00f59589ddda085e7439364b286c39f2304f4ad7ce3e68dce929d066f8d37bdf6d55e4a5a520ddbccf8a206c75444d135c7bcd525e736492966500184101b77feb00f59589ddda085e7439364b286c39f2304f4ad7ce3e68dce929d066f8d37bdf6d55e4a5a520ddbccf8a206c75444d135c7bcd525e736492966500184101b77feb00f59589ddda085e7439364b286c39f23"), []byte("1111111111111111"))
	}
}
